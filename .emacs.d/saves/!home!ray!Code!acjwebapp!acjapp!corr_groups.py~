# /usr/bin/python3.8

import pandas
from math import nan

as_dict = {1: {1: 1.0, 2: 0.8571428571428571, 5: 0.8756374572745757, 6: nan, 8: 0.5714285714285714, 13: 0.4000661320993193},
           2: {1: 0.8571428571428571, 2: 1.0, 5: nan, 6: nan, 8: 0.42857142857142855, 13: 0.4000661320993193},
           5: {1: 0.8756374572745757, 2: nan, 5: 1.0, 6: 0.97537726481663, 8: nan, 13: nan},
           6: {1: nan, 2: nan, 5: 0.97537726481663, 6: 1.0, 8: nan, 13: nan},
           8: {1: 0.5714285714285714, 2: 0.42857142857142855, 5: nan, 6: nan, 8: 1.0, 13: 0.181848241863327},
           13: {1: 0.4000661320993193, 2: 0.4000661320993193, 5: nan, 6: nan, 8: 0.181848241863327, 13: 1.0}}

df = pandas.DataFrame(data=as_dict)

for col in df.columns:
    print(col)
    for row in df.loc[[col]]:
        if 0.8 <= df[row][col] < 1.0:
            print(f"  {row}: {round(df[row][col], 5)}")
# for every column d[1], d[2], ... d[13]:
    # find the ones with the highest correlation (say above 0.8)
    # add those ones to a dictionary maybe? {group: [member, member, member]}
